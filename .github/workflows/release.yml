name: Release

on:
  push:
    tags:
      - 'v*'
  # Allow manual triggering of releases
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v0.0.2)'
        required: true
        type: string
      draft:
        description: 'Create as draft release'
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache: true
      
      - name: Check GPG secrets
        run: |
          if [ -z "${{ secrets.GPG_PRIVATE_KEY }}" ]; then
            echo "‚ö†Ô∏è GPG_PRIVATE_KEY secret is not set"
            echo "Releases will be created without GPG signing"
          else
            echo "‚úÖ GPG_PRIVATE_KEY secret is configured"
          fi
      
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
        continue-on-error: true
      
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean ${{ github.event.inputs.draft == 'true' && '--draft' || '' }}
        env:
          # GitHub token, automatically provided to the action
          # (no need to define this secret in the repo settings)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
      
      - name: Release Summary
        run: |
          echo "üéâ Release workflow completed!"
          echo "üì¶ Release created for: ${{ github.ref_name || github.event.inputs.version }}"
          echo "üîó Check releases at: ${{ github.server_url }}/${{ github.repository }}/releases"
          if [ "${{ steps.import_gpg.outcome }}" = "failure" ]; then
            echo "‚ö†Ô∏è GPG signing failed - release created without signatures"
          else
            echo "‚úÖ Release includes GPG signatures"
          fi